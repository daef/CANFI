<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bw_Measure.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>218, 17</value>
  </metadata>
  <metadata name="ss_main.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>338, 17</value>
  </metadata>
  <metadata name="tt_Main.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>432, 17</value>
  </metadata>
  <data name="rtb_RTLSDR.Text" xml:space="preserve">
    <value>The GPL-licensed &lt;rtlsdr.dll&gt; is not found in the directory 
- but is necessary to get this software working 

CANFI will not start without this file.
See http://www.canfi.eu for details.

Do you want to download the DLL from the repository?
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEAAgEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1NTUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
        CAQCCgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAA1NTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCAQCCgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQA1NTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCAQCCgUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEFEQo1
        NTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAQACCQYAAAABCAQCCwUAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAgEEEgo1NTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEEEQoAAAADDwgEEwoAAwEAAAAAAAAAAAAAAAAEGQsA
        AQAABAIAAAAEBQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBQMAAQABBAIHHxE1NTUAAAAAAAAAAAAA
        AAAAAAAEGAsAAAAAAAAAAAADAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBwQAAAABBwQGFg0AAAAE
        EAkFFQsFFgsAAgEAAQAAAAAAAAAGIA4AAgEBBQMAAAAFCgcEDwkAAQAAAAAAAAABBQICBAMAAAAAAQAG
        HQ8EFQsBBwQKLBc1NTUCCQQAAAAAAAAAAAAAAAAGIxEAAAAAAAAAAAARFBECCAUAAAAAAAAAAAABAgEB
        AwIAAAAAAQALMBsDEAgDCwcLKhkAAQAGEQsIFQ4DFgkAAwEAAwEAAAAAAAAHJBAAAwEBBgMAAAACCwYL
        KhgCCAUAAAAAAAAABQEEFQoAAAAAAQAFHQ0KKhcCCAQKLhg1NTUCDAUAAQAABAEAAAAAAAAIKRQAAwIA
        AAAAAAAEEAkMKxkBAwIAAAAAAAAAAwECDgcAAAAAAAAKMRcHHRADDAcLKhgJLRcIHhEGFAwDFwkHHBAB
        CQQAAQECCQUILRQBCAMBBwMAAAABCwYJLRcBCwUAAAAEEAgABQEIKhUCDwcEFwoFIA8KMRgCCAQKLhk1
        NTUDDQYDEAkACAMAAQEBBgMMPR4DDggAAAAAAAADEAgLLRgBBgMAAAADDQcAAwEKMBkBCQQCDQYKNhgG
        IA8DDQcLKhgNPiAKKxcFFQsLIBQIHhACDAUDEwkGHg8JMRYCDQUCDQYAAgEACwUPQiMCDAUGGw4NOR0A
        BQIHLRUEFwoFHQ0FIA8NQB8BCAQKLhg1NTUFEAkGGw8DEwkEEgkIHxANQh4EEwoAAAAAAAACEQcPOyAB
        BwMCDgcJLBYAAwEJNBgDEwkDEggNRB8NPx8CDQcJKhcNQB8KLBgFFwwNKRkKLRcCEAcGJREGIxAPQSEK
        LRgGGg4EFAoEEwkWVS8JJhUHKBIOTSQIHA8HKRMFGw0HJxIGIxAHLRICCQUOMR01NTUGFAwGGw8EFgsI
        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
        AAABBAEAAAAAAAAEFQoEEQoJKhYAAAAAAAAAAAAAAAACCgUBBQMAAgAAAAAACAMABAEAAAAAAAAAAAA1
        NTUAAAAAAAACDAYABAIAAAAAAQAHJRIGGA4GHw8AAAAAAAAAAAAAAAAEEgoCCgUABwMAAQAAAAABCQQA
        AAAAAAAAAAAABAECDAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEDDggAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABgIAAwEAAAAAAAAAAAA1NTUAAAAAAAAABQIAAAAAAAAAAAAAAwEBBwQFFQwAAAAAAAAA
        AAAAAAAAAQAAAAAABQIAAAAAAAABCQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwEAAAAAAAAAAAAAAAA1NTUAAAAAAAAAAwEA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCQQAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAA0NDQAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAABCQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0NDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1
        NTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCAMA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1NTUKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoMEg4KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo4ODgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////+Fkv///////4WS////////hZL///////+Fkv///////4WS////////
        hZIAAAAAAACFkgAAAAAAAIWSAAAAAAAAhZIAAAAAAACFkgAAAAAAAIWSAAAAAAAAhZIAAAAAAACFkgAA
        AAAAAIWSAAAAAAAAhZIAAAAAAACFkgAAAAAAAIWSAAAAAAAAhZIAAAAAAACFkgAAAAAAAIWSAAAAAAAA
        hZIAAAAAAACFkgAAAAAAAIWSAAAAAAAAhZIAAAAAAACFkgAAAAAAAIWSAAAAAAAAhZIAAAAAAACFkgAA
        AAAAAIWSAAAAAAAAhZIAAAAAAACFkgAAAAAAAIWSAAAAAAAAhZIAAAAAAACFkgAAAAAAAIWSAAAAAAAA
        hZIAAAAAAACFkgAAAAAAAIWSAAAAAAAAhZIAAAAAAACFkgAAAAAAAIWSAAAAAAAAhZL///////+Fkv//
        /////4WS////////hZL///////+Fkv///////4WS////////hZI=
</value>
  </data>
</root>